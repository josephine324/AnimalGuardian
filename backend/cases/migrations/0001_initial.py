# Generated by Django 4.2.7 on 2025-10-13 15:38

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('livestock', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='CaseReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('case_id', models.CharField(max_length=20, unique=True)),
                ('status', models.CharField(choices=[('pending', 'Pending Review'), ('under_review', 'Under Review'), ('diagnosed', 'Diagnosed'), ('treated', 'Treated'), ('resolved', 'Resolved'), ('escalated', 'Escalated')], default='pending', max_length=20)),
                ('urgency', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('urgent', 'Urgent')], default='medium', max_length=20)),
                ('symptoms_observed', models.TextField()),
                ('duration_of_symptoms', models.CharField(blank=True, max_length=100)),
                ('number_of_affected_animals', models.PositiveIntegerField(default=1)),
                ('photos', models.JSONField(blank=True, default=list)),
                ('videos', models.JSONField(blank=True, default=list)),
                ('audio_notes', models.JSONField(blank=True, default=list)),
                ('location_notes', models.TextField(blank=True)),
                ('reported_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('livestock', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='case_reports', to='livestock.livestock')),
                ('reporter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='case_reports', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Case Report',
                'verbose_name_plural': 'Case Reports',
                'db_table': 'case_reports',
                'ordering': ['-reported_at'],
            },
        ),
        migrations.CreateModel(
            name='Disease',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, unique=True)),
                ('name_kinyarwanda', models.CharField(blank=True, max_length=200)),
                ('name_french', models.CharField(blank=True, max_length=200)),
                ('severity', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('critical', 'Critical')], default='medium', max_length=20)),
                ('is_zoonotic', models.BooleanField(default=False)),
                ('is_contagious', models.BooleanField(default=False)),
                ('common_symptoms', models.TextField(blank=True)),
                ('treatment_guidelines', models.TextField(blank=True)),
                ('prevention_measures', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('affected_livestock_types', models.ManyToManyField(blank=True, to='livestock.livestocktype')),
            ],
            options={
                'verbose_name': 'Disease',
                'verbose_name_plural': 'Diseases',
                'db_table': 'diseases',
            },
        ),
        migrations.CreateModel(
            name='VeterinaryConsultation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('consultation_date', models.DateTimeField(auto_now_add=True)),
                ('consultation_type', models.CharField(choices=[('initial_review', 'Initial Review'), ('follow_up', 'Follow-up'), ('emergency', 'Emergency Consultation'), ('teleconsultation', 'Teleconsultation')], max_length=50)),
                ('diagnosis', models.TextField()),
                ('treatment_plan', models.TextField()),
                ('medications_prescribed', models.TextField(blank=True)),
                ('dosage_instructions', models.TextField(blank=True)),
                ('follow_up_required', models.BooleanField(default=False)),
                ('follow_up_date', models.DateField(blank=True, null=True)),
                ('follow_up_instructions', models.TextField(blank=True)),
                ('consultation_fee', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('medication_cost', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('veterinarian_notes', models.TextField(blank=True)),
                ('case_report', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='consultations', to='cases.casereport')),
                ('veterinarian', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='consultations', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Veterinary Consultation',
                'verbose_name_plural': 'Veterinary Consultations',
                'db_table': 'veterinary_consultations',
                'ordering': ['-consultation_date'],
            },
        ),
        migrations.CreateModel(
            name='TreatmentFollowUp',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('follow_up_date', models.DateTimeField()),
                ('follow_up_type', models.CharField(choices=[('phone_call', 'Phone Call'), ('visit', 'Farm Visit'), ('teleconsultation', 'Teleconsultation'), ('self_report', 'Self Report')], max_length=50)),
                ('treatment_response', models.TextField()),
                ('improvement_observed', models.BooleanField(default=False)),
                ('side_effects', models.TextField(blank=True)),
                ('additional_notes', models.TextField(blank=True)),
                ('next_steps', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('conducted_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('consultation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='follow_ups', to='cases.veterinaryconsultation')),
            ],
            options={
                'verbose_name': 'Treatment Follow-up',
                'verbose_name_plural': 'Treatment Follow-ups',
                'db_table': 'treatment_follow_ups',
                'ordering': ['-follow_up_date'],
            },
        ),
        migrations.CreateModel(
            name='OutbreakAlert',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('severity', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('critical', 'Critical')], max_length=20)),
                ('affected_districts', models.JSONField(blank=True, default=list)),
                ('affected_sectors', models.JSONField(blank=True, default=list)),
                ('prevention_measures', models.TextField()),
                ('immediate_actions', models.TextField()),
                ('vaccination_recommendations', models.TextField(blank=True)),
                ('source', models.CharField(blank=True, max_length=200)),
                ('is_active', models.BooleanField(default=True)),
                ('alert_date', models.DateTimeField(auto_now_add=True)),
                ('expires_at', models.DateTimeField(blank=True, null=True)),
                ('affected_livestock_count', models.PositiveIntegerField(default=0)),
                ('affected_farms_count', models.PositiveIntegerField(default=0)),
                ('disease', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cases.disease')),
                ('reported_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Outbreak Alert',
                'verbose_name_plural': 'Outbreak Alerts',
                'db_table': 'outbreak_alerts',
                'ordering': ['-alert_date'],
            },
        ),
        migrations.CreateModel(
            name='CaseStatistics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('total_cases_reported', models.PositiveIntegerField(default=0)),
                ('cases_pending', models.PositiveIntegerField(default=0)),
                ('cases_under_review', models.PositiveIntegerField(default=0)),
                ('cases_resolved', models.PositiveIntegerField(default=0)),
                ('disease_breakdown', models.JSONField(blank=True, default=dict)),
                ('district_breakdown', models.JSONField(blank=True, default=dict)),
                ('average_response_time_hours', models.DecimalField(decimal_places=2, default=0, max_digits=6)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Case Statistics',
                'verbose_name_plural': 'Case Statistics',
                'db_table': 'case_statistics',
                'ordering': ['-date'],
                'unique_together': {('date',)},
            },
        ),
        migrations.AddField(
            model_name='casereport',
            name='suspected_disease',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='cases.disease'),
        ),
    ]
